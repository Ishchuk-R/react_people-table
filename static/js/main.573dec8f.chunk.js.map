{"version":3,"sources":["helper/api.tsx","components/HomePage.tsx","components/Header.tsx","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","response","json","people","HomePage","Header","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","useState","get","queryWord","setQueryWord","applyQuery","useCallback","debounce","query","set","delete","push","toString","className","exact","to","path","placeholder","value","onChange","target","type","PersonName","name","slug","sex","params","cn","male","female","PersonRow","person","personName","id","born","died","motherName","mother","father","fatherName","active","PeopleTableHeader","sort","PeopleTable","match","useRouteMatch","querySearch","sortBy","isSortedAsk","sortPeople","sortParam","b","localeCompare","visiblePeople","useMemo","result","peopleGeneral","patternSearch","RegExp","filter","p","test","getVisiblePeople","reverse","map","title","key","Math","random","onClick","App","setPeople","useEffect","then","startId","find","f","m","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.573dec8f.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\n\nexport const getPeople = async () => {\n  const response = await fetch(API_URL);\n  const people = await response.json();\n\n  return people;\n};\n","import React from 'react';\n\nexport const HomePage = () => {\n  return (\n    <h1>Welcome Home</h1>\n  );\n};\n","import React, { ChangeEventHandler, useCallback, useState } from 'react';\nimport {\n  NavLink, Route, useHistory, useLocation,\n} from 'react-router-dom';\nimport debounce from 'lodash.debounce';\n\nexport const Header = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const [queryWord, setQueryWord] = useState(searchParams.get('query') || '');\n\n  const applyQuery = useCallback(\n    debounce((query: string) => {\n      if (query) {\n        searchParams.set('query', query);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({ search: searchParams.toString() });\n    }, 1000), [],\n  );\n\n\n  const hadleChange: ChangeEventHandler<HTMLInputElement> = ({ target }) => {\n    setQueryWord(target.value);\n    applyQuery(target.value);\n  };\n\n  return (\n    <header className=\"navbar bg-secondary\">\n      <div className=\"container\">\n        <nav>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink exact to=\"/\">Home page</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/people\">People page</NavLink>\n            </li>\n          </ul>\n        </nav>\n        <Route path=\"/people\">\n          <input\n            placeholder=\"Search\"\n            value={queryWord}\n            onChange={hadleChange}\n            type=\"text\"\n          />\n        </Route>\n      </div>\n\n\n    </header>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype PersonNameType ={\n  name: string;\n  slug: string;\n  sex: string;\n};\n\n\nexport const PersonName: React.FC<PersonNameType> = ({ name, slug, sex }) => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search).toString() || '';\n\n  return (\n    <Link\n      className={cn(\n        `${slug}`,\n        { male: sex === 'm' },\n        { female: sex === 'f' },\n      )}\n      to={`/people/${slug}?${params}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { PersonName } from './PersonName';\n\ntype PersonRowProps = {\n  person: PersonCompleted;\n  personName: string;\n};\n\nexport const PersonRow = ({ person, personName }: PersonRowProps) => {\n  const {\n    name, id, sex, born, died, motherName, mother, father, fatherName, slug,\n  } = person;\n\n  return (\n    <tr className={cn('person',\n      { active: personName === slug })}\n    >\n      <th>{id}</th>\n      <th>\n        <PersonName sex={sex} name={name} slug={slug} />\n      </th>\n      <th>{sex}</th>\n      <th>{born}</th>\n      <th>{died}</th>\n      <th>\n        {mother ? (\n          <PersonName sex=\"f\" name={motherName} slug={mother.slug} />\n        ) : (<span>{motherName}</span>)}\n\n      </th>\n      <th>\n        {father ? (\n          <PersonName sex=\"m\" name={fatherName} slug={father.slug} />\n        ) : (<span>{fatherName}</span>)}\n      </th>\n    </tr>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport { PersonRow } from './PersonRow';\n\nconst PeopleTableHeader = [\n  { name: 'Id', sort: 'id' },\n  { name: 'Name', sort: 'name' },\n  { name: 'Sex', sort: 'sex' },\n  { name: 'Born', sort: 'born' },\n  { name: 'Died', sort: 'died' },\n  { name: 'Mother' },\n  { name: 'Father' },\n];\n\ntype PeopleList = {\n  people: PersonCompleted[];\n};\n\nexport const PeopleTable = ({ people }: PeopleList) => {\n  const match = useRouteMatch<MatchParams>();\n  const location = useLocation();\n  const history = useHistory();\n  const { personName } = match.params;\n\n  const searchParams = new URLSearchParams(location.search);\n\n  const querySearch = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const isSortedAsk = searchParams.get('sortOrder') !== 'desc';\n  const getVisiblePeople = (peopleGeneral: PersonCompleted[], query: string) => {\n    const patternSearch = new RegExp(query, 'i');\n\n    return peopleGeneral.filter(p => {\n      return patternSearch.test(p.name + p.motherName + p.fatherName);\n    });\n  };\n\n\n  const sortPeople = (sortParam: string) => {\n    switch (sortParam) {\n      case 'name':\n        return (a: PersonCompleted, b: PersonCompleted) => {\n          return a.name.localeCompare(b.name);\n        };\n\n      case 'id':\n        return (a: PersonCompleted, b: PersonCompleted) => a.id - b.id;\n      case 'sex':\n        return (a: PersonCompleted, b: PersonCompleted) => a.sex.localeCompare(b.sex);\n      case 'born':\n        return (a: PersonCompleted, b: PersonCompleted) => a.born - b.born;\n      default:\n        return (a: PersonCompleted, b: PersonCompleted) => a.died - b.died;\n    }\n  };\n\n  const visiblePeople = useMemo(() => {\n    const result = [...getVisiblePeople(people, querySearch)].sort(sortPeople(sortBy));\n\n    if (isSortedAsk) {\n      return result;\n    }\n\n    return result.reverse();\n  }, [querySearch, sortBy, isSortedAsk, people]);\n\n\n  const Sort = (sort: string) => {\n    searchParams.set('sortOrder', isSortedAsk ? 'desc' : 'ask');\n    if (sort) {\n      searchParams.set('sortBy', sort);\n      history.push({\n        search: searchParams.toString(),\n      });\n      sortPeople(sort);\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr className=\"table-primary\">\n          {PeopleTableHeader.map((title: Title) => (\n            <th\n              key={title.name + Math.random}\n              onClick={() => {\n                Sort(title.sort || '');\n              }}\n            >\n              {title.name}\n              {sortBy === title.sort && (isSortedAsk ? ' ⇑' : ' ⇓') }\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {visiblePeople.map((person) => (\n          <PersonRow personName={personName} person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { getPeople } from './helper/api';\n\nimport './App.css';\n\n\nimport { HomePage } from './components/HomePage';\nimport { Header } from './components/Header';\nimport { PeopleTable } from './components/PeopleTable';\n\nconst App = () => {\n  const [people, setPeople] = useState<PersonCompleted[]>([]);\n\n\n  useEffect(() => {\n    getPeople()\n      .then(result => {\n        let startId = 0;\n\n        return (\n          setPeople(result.map((person: PersonCompleted) => {\n            startId += 1;\n            return (\n              {\n                ...person,\n                id: startId,\n                father: result.find((f: PersonCompleted) => f.name === person.fatherName),\n                mother: result.find((m: PersonCompleted) => m.name === person.motherName),\n              }\n            );\n          }))\n        );\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <div className=\"container content-container\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route\n            path=\"/people/:personName?\"\n            render={() => (\n              <PeopleTable people={people} />)}\n          />\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route>\n            <h1>Page not found</h1>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}